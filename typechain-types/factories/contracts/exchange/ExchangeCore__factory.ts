/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ExchangeCore,
  ExchangeCoreInterface,
} from "../../../contracts/exchange/ExchangeCore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staticTarget",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "staticSelector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "staticExtradata",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "listingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "orderbookInclusionDesired",
        type: "bool",
      },
    ],
    name: "OrderApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFill",
        type: "uint256",
      },
    ],
    name: "OrderFillChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "firstHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secondHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "firstMaker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "secondMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFirstFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSecondFill",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "metadata",
        type: "bytes32",
      },
    ],
    name: "OrdersMatched",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "approved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registries",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6000805460ff1916905560c0604052601a60808190527f19457468657265756d205369676e6564204d6573736167653a0a00000000000060a0908152610048916002919061005b565b5034801561005557600080fd5b506100fc565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261009157600085556100d7565b82601f106100aa57805160ff19168380011785556100d7565b828001600101855582156100d7579182015b828111156100d75782518255916020019190600101906100bc565b506100e39291506100e7565b5090565b5b808211156100e357600081556001016100e8565b6101998061010b6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063caed80df14610046578063fac7fc381461008d578063ffc2ab14146100c6575b600080fd5b6100796004803603602081101561005c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610111565b604080519115158252519081900360200190f35b610079600480360360408110156100a357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610126565b6100ff600480360360408110156100dc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610146565b60408051918252519081900360200190f35b60036020526000908152604090205460ff1681565b600560209081526000928352604080842090915290825290205460ff1681565b60046020908152600092835260408084209091529082529020548156fea264697066735822122003c995bc765904d502b9425b262458f3916fe85963d9ee1390de6a928c8c3d2664736f6c63430007050033";

type ExchangeCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExchangeCore__factory extends ContractFactory {
  constructor(...args: ExchangeCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExchangeCore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExchangeCore__factory {
    return super.connect(runner) as ExchangeCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeCoreInterface {
    return new Interface(_abi) as ExchangeCoreInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExchangeCore {
    return new Contract(address, _abi, runner) as unknown as ExchangeCore;
  }
}
