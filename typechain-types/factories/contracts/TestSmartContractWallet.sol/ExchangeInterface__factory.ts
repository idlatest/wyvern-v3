/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ExchangeInterface,
  ExchangeInterfaceInterface,
} from "../../../contracts/TestSmartContractWallet.sol/ExchangeInterface";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "address",
        name: "staticTarget",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "staticSelector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "staticExtradata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maximumFill",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "orderbookInclusionDesired",
        type: "bool",
      },
    ],
    name: "approveOrder_",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610157806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063995e819514610030575b600080fd5b610112600480360361014081101561004757600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101358216926040820135909216917fffffffff00000000000000000000000000000000000000000000000000000000606083013516919081019060a0810160808201356401000000008111156100b957600080fd5b8201836020820111156100cb57600080fd5b803590602001918460018302840111640100000000831117156100ed57600080fd5b9193509150803590602081013590604081013590606081013590608001351515610114565b005b505050505050505050505056fea2646970667358221220a26d6a9439af6968dfe40004d7e097efb12f55568ba965ea1fe3967b5d9fd99564736f6c63430007050033";

type ExchangeInterfaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeInterfaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExchangeInterface__factory extends ContractFactory {
  constructor(...args: ExchangeInterfaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExchangeInterface & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExchangeInterface__factory {
    return super.connect(runner) as ExchangeInterface__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterfaceInterface {
    return new Interface(_abi) as ExchangeInterfaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExchangeInterface {
    return new Contract(address, _abi, runner) as unknown as ExchangeInterface;
  }
}
