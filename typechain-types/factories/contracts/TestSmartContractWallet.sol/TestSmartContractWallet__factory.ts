/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestSmartContractWallet,
  TestSmartContractWalletInterface,
} from "../../../contracts/TestSmartContractWallet.sol/TestSmartContractWallet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "exchange",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "address",
        name: "staticTarget",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "staticSelector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "staticExtradata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maximumFill",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "orderbookInclusionDesired",
        type: "bool",
      },
    ],
    name: "approveOrder_",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerProxy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc721",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610493806100206000396000f3fe6080604052600436106100385760003560e01c8063367605ca146100ec578063c5a4f16114610145578063e101f0871461022c576100e7565b366100e75760408051348152905160009133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a360408051348152905160019133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a360408051348152905160029133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3005b600080fd5b3480156100f857600080fd5b506101316004803603606081101561010f57600080fd5b506001600160a01b03813581169160208101359091169060400135151561025f565b604080519115158252519081900360200190f35b34801561015157600080fd5b50610131600480360361016081101561016957600080fd5b6001600160a01b03823581169260208101358216926040820135831692606083013516917fffffffff000000000000000000000000000000000000000000000000000000006080820135169181019060c0810160a08201356401000000008111156101d357600080fd5b8201836020820111156101e557600080fd5b8035906020019184600183028401116401000000008311171561020757600080fd5b91935091508035906020810135906040810135906060810135906080013515156102dc565b34801561023857600080fd5b506101316004803603602081101561024f57600080fd5b50356001600160a01b0316610400565b6000826001600160a01b031663a22cb46585846040518363ffffffff1660e01b815260040180836001600160a01b03168152602001821515815260200192505050600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b506001979650505050505050565b60008c6001600160a01b031663995e81958d8d8d8d8d8d8d8d8d8d8d6040518c63ffffffff1660e01b8152600401808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b03168152602001897bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018060200187815260200186815260200185815260200184815260200183151581526020018281038252898982818152602001925080828437600081840152601f19601f8201169050808301925050509c50505050505050505050505050600060405180830381600087803b1580156103d457600080fd5b505af11580156103e8573d6000803e3d6000fd5b50505050600190509c9b505050505050505050505050565b6000816001600160a01b031663ddd81f826040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561043d57600080fd5b505af1158015610451573d6000803e3d6000fd5b5060019594505050505056fea26469706673582212200474c544a35e32424e876101d67305963cee03f1ed1f0b4429f6f1a73de3061164736f6c63430007050033";

type TestSmartContractWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestSmartContractWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestSmartContractWallet__factory extends ContractFactory {
  constructor(...args: TestSmartContractWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestSmartContractWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestSmartContractWallet__factory {
    return super.connect(runner) as TestSmartContractWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSmartContractWalletInterface {
    return new Interface(_abi) as TestSmartContractWalletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestSmartContractWallet {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestSmartContractWallet;
  }
}
