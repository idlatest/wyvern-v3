/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StaticERC721,
  StaticERC721Interface,
} from "../../../contracts/static/StaticERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
      {
        internalType: "address[7]",
        name: "addresses",
        type: "address[7]",
      },
      {
        internalType: "enum AuthenticatedProxy.HowToCall[2]",
        name: "howToCalls",
        type: "uint8[2]",
      },
      {
        internalType: "uint256[6]",
        name: "uints",
        type: "uint256[6]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "counterdata",
        type: "bytes",
      },
    ],
    name: "swapOneForOneERC721",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
      {
        internalType: "address[7]",
        name: "addresses",
        type: "address[7]",
      },
      {
        internalType: "enum AuthenticatedProxy.HowToCall[2]",
        name: "howToCalls",
        type: "uint8[2]",
      },
      {
        internalType: "uint256[6]",
        name: "uints",
        type: "uint256[6]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "counterdata",
        type: "bytes",
      },
    ],
    name: "swapOneForOneERC721Decoding",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
      {
        internalType: "address[7]",
        name: "addresses",
        type: "address[7]",
      },
      {
        internalType: "enum AuthenticatedProxy.HowToCall",
        name: "howToCall",
        type: "uint8",
      },
      {
        internalType: "uint256[6]",
        name: "",
        type: "uint256[6]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferERC721Exact",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063883ee43014610046578063b6c8184b1461028e578063ba35274314610424575b600080fd5b61027c600480360361024081101561005d57600080fd5b81019060208101813564010000000081111561007857600080fd5b82018360208201111561008a57600080fd5b803590602001918460018302840111640100000000831117156100ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160e081810190925293969594818101949350915060079083908390808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250506040805160c0818101909252929594938181019392509060069083908390808284376000920191909152509194939260208101925035905064010000000081111561018057600080fd5b82018360208201111561019257600080fd5b803590602001918460018302840111640100000000831117156101b457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561020757600080fd5b82018360208201111561021957600080fd5b8035906020019184600183028401116401000000008311171561023b57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061065a945050505050565b60408051918252519081900360200190f35b61042260048036036102008110156102a557600080fd5b8101906020810181356401000000008111156102c057600080fd5b8201836020820111156102d257600080fd5b803590602001918460018302840111640100000000831117156102f457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160e08181019092529396959481810194935091506007908390839080828437600092019190915250506040805160c0818101909252929560ff853516959094909360e082019350916020909101906006908390839080828437600092019190915250919493926020810192503590506401000000008111156103ad57600080fd5b8201836020820111156103bf57600080fd5b803590602001918460018302840111640100000000831117156103e157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061096c945050505050565b005b61027c600480360361024081101561043b57600080fd5b81019060208101813564010000000081111561045657600080fd5b82018360208201111561046857600080fd5b8035906020019184600183028401116401000000008311171561048a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160e081810190925293969594818101949350915060079083908390808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250506040805160c0818101909252929594938181019392509060069083908390808284376000920191909152509194939260208101925035905064010000000081111561055e57600080fd5b82018360208201111561057057600080fd5b8035906020019184600183028401116401000000008311171561059257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156105e557600080fd5b8201836020820111156105f757600080fd5b8035906020019184600183028401116401000000008311171561061957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a46945050505050565b604080516004808252602482019092526020810180516001600160e01b03166323b872dd60e01b17905260009160609161069391610c6e565b8551909150156106a257600080fd5b6106aa610dd7565b6106b2610dd7565b8980602001905160808110156106c757600080fd5b50805160408b810151929450840192506001600160a01b039182169116146107205760405162461bcd60e51b8152600401808060200182810382526037815260200180610e1f6037913960400191505060405180910390fd5b8751600090600181111561073057fe5b1461076c5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e566022913960400191505060405180910390fd5b6107808361077b886004610c6e565b610c83565b61078957600080fd5b6000806000610799896004610ce7565b80602001905160608110156107ad57600080fd5b508051602082015160409092015190945090925090508b600160200201516001600160a01b0316836001600160a01b0316146107e857600080fd5b60808c01516001600160a01b0383811691161461080457600080fd5b8351811461081157600080fd5b602085015160a08d01516001600160a01b039081169116146108645760405162461bcd60e51b815260040180806020018281038252603d815260200180610e78603d913960400191505060405180910390fd5b60208b0151600090600181111561087757fe5b146108b35760405162461bcd60e51b8152600401808060200182810382526029815260200180610df66029913960400191505060405180910390fd5b6108c28661077b8a6004610c6e565b6108cb57600080fd5b60008060006108db8b6004610ce7565b80602001905160608110156108ef57600080fd5b508051602082015160409092015190945090925090508e600460200201516001600160a01b0316836001600160a01b03161461092a57600080fd5b60208f01516001600160a01b0383811691161461094657600080fd5b6020870151811461095657600080fd5b5060019f9e505050505050505050505050505050565b60008086806020019051604081101561098457600080fd5b50805160209091015190925090506001600160a01b03821686600260200201516001600160a01b0316146109b757600080fd5b60008560018111156109c557fe5b146109cf57600080fd5b6020868101516080880151604080516001600160a01b0393841660248201529290911660448301526064808301859052815180840390910181526084909201905290810180516001600160e01b03166323b872dd60e01b179052610a34908490610c83565b610a3d57600080fd5b50505050505050565b825160009015610a5557600080fd5b610a5d610dd7565b610a65610dd7565b888060200190516080811015610a7a57600080fd5b50805160408a810151929450840192506001600160a01b03918216911614610ad35760405162461bcd60e51b8152600401808060200182810382526037815260200180610e1f6037913960400191505060405180910390fd5b86516000906001811115610ae357fe5b14610b1f5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e566022913960400191505060405180910390fd5b60208801516080890151610b939187918460005b60209081029190910151604080516001600160a01b03958616602482015293909416604484015260648084019190915283518084039091018152608490920190925290810180516001600160e01b03166323b872dd60e01b179052610c83565b610b9c57600080fd5b602082015160a08901516001600160a01b03908116911614610bef5760405162461bcd60e51b815260040180806020018281038252603d815260200180610e78603d913960400191505060405180910390fd5b60208701516000906001811115610c0257fe5b14610c3e5760405162461bcd60e51b8152600401808060200182810382526029815260200180610df66029913960400191505060405180910390fd5b60808801516020890151610c56918691846001610b33565b610c5f57600080fd5b50600198975050505050505050565b6060610c7c83600084610d0b565b9392505050565b815181516000916001918114808314610c9f5760009250610cdd565b600160208701838101602088015b600284838510011415610cd8578051835114610ccc5760009650600093505b60209283019201610cad565b505050505b5090949350505050565b60606000610cf6845184610d7a565b9050610d03848483610d0b565b949350505050565b60608082158015610d2757604051915060208201604052610d71565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610d60578051835260209283019201610d48565b5050858452601f01601f1916604052505b50949350505050565b600082821115610dd1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6040518060400160405280600290602082028036833750919291505056fe4552433732313a20636f756e74657263616c6c206d7573742062652061206469726563742063616c6c4552433732313a2063616c6c20746172676574206d75737420657175616c2061646472657373206f6620746f6b656e20746f20676976654552433732313a2063616c6c206d7573742062652061206469726563742063616c6c4552433732313a20636f756e74657263616c6c20746172676574206d75737420657175616c2061646472657373206f6620746f6b656e20746f20676574a2646970667358221220182dcac2db3fc32ce75051b61e173531fc5f6fb0c5da574d30ea2fc5d67d43a464736f6c63430007050033";

type StaticERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticERC721__factory extends ContractFactory {
  constructor(...args: StaticERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StaticERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StaticERC721__factory {
    return super.connect(runner) as StaticERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticERC721Interface {
    return new Interface(_abi) as StaticERC721Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StaticERC721 {
    return new Contract(address, _abi, runner) as unknown as StaticERC721;
  }
}
