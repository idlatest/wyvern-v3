/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface StaticERC1155Interface extends Interface {
  getFunction(
    nameOrSignature:
      | "swapOneForOneERC1155"
      | "swapOneForOneERC1155Decoding"
      | "transferERC1155Exact"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "swapOneForOneERC1155",
    values: [
      BytesLike,
      AddressLike[],
      [BigNumberish, BigNumberish],
      BigNumberish[],
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapOneForOneERC1155Decoding",
    values: [
      BytesLike,
      AddressLike[],
      [BigNumberish, BigNumberish],
      BigNumberish[],
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferERC1155Exact",
    values: [BytesLike, AddressLike[], BigNumberish, BigNumberish[], BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "swapOneForOneERC1155",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapOneForOneERC1155Decoding",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferERC1155Exact",
    data: BytesLike
  ): Result;
}

export interface StaticERC1155 extends BaseContract {
  connect(runner?: ContractRunner | null): StaticERC1155;
  waitForDeployment(): Promise<this>;

  interface: StaticERC1155Interface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  swapOneForOneERC1155: TypedContractMethod<
    [
      extra: BytesLike,
      addresses: AddressLike[],
      howToCalls: [BigNumberish, BigNumberish],
      uints: BigNumberish[],
      data: BytesLike,
      counterdata: BytesLike
    ],
    [bigint],
    "view"
  >;

  swapOneForOneERC1155Decoding: TypedContractMethod<
    [
      extra: BytesLike,
      addresses: AddressLike[],
      howToCalls: [BigNumberish, BigNumberish],
      uints: BigNumberish[],
      data: BytesLike,
      counterdata: BytesLike
    ],
    [bigint],
    "view"
  >;

  transferERC1155Exact: TypedContractMethod<
    [
      extra: BytesLike,
      addresses: AddressLike[],
      howToCall: BigNumberish,
      arg3: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "swapOneForOneERC1155"
  ): TypedContractMethod<
    [
      extra: BytesLike,
      addresses: AddressLike[],
      howToCalls: [BigNumberish, BigNumberish],
      uints: BigNumberish[],
      data: BytesLike,
      counterdata: BytesLike
    ],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "swapOneForOneERC1155Decoding"
  ): TypedContractMethod<
    [
      extra: BytesLike,
      addresses: AddressLike[],
      howToCalls: [BigNumberish, BigNumberish],
      uints: BigNumberish[],
      data: BytesLike,
      counterdata: BytesLike
    ],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "transferERC1155Exact"
  ): TypedContractMethod<
    [
      extra: BytesLike,
      addresses: AddressLike[],
      howToCall: BigNumberish,
      arg3: BigNumberish[],
      data: BytesLike
    ],
    [void],
    "view"
  >;

  filters: {};
}
